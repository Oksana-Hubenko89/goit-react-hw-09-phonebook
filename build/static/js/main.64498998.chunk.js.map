{"version":3,"sources":["redux/auth/auth-reducer.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","components/Navigation/Navigation.module.css","components/AuthNav/AuthNav.module.css","redux/auth/auth-actions.js","components/PageHeading/PageHeading.module.css","components/UserMenu/UserMenu.module.css","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","redux/contacts/contacts-reducer.js","components/Button/Button.module.css","components/Container/Container.js","components/Container/Container.module.css","components/AppBar/AppBar.module.css","redux/contacts/contacts-actions.js","components/Navigation/Navigation.js","components/UserMenu/default-avatar.png","components/UserMenu/UserMenu.js","components/AuthNav/AuthNav.js","components/PageHeading/PageHeading.js","components/AppBar/AppBar.js","components/PrivateRoute.js","components/PublicRoute.js","components/App/App.js","redux/store.js","index.js"],"names":["initialUserState","name","email","user","createReducer","authActions","registerSuccess","_","payload","loginSuccess","logoutSuccess","getCurrentUserSuccess","token","isAuthenticated","registerError","loginError","getCurrentUserError","combineReducers","axios","defaults","baseURL","headers","common","Authorization","register","credentials","dispatch","a","registerRequest","post","response","data","message","logOut","logoutRequest","logoutError","logIn","loginRequest","getCurrentUser","getState","persistedToken","auth","getCurrentUserRequest","get","getIsAuthenticated","store","getUserName","getToken","module","exports","createAction","fetchContactsRequest","actions","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","fetchContacts","addContact","number","contact","deleteContact","contactId","delete","getFilter","contacts","filter","getAllContacts","items","getTotalContactCount","createSelector","length","getvisibleContacts","normalizedFilter","toLowerCase","includes","changeFilter","state","id","Container","children","styles","container","Navigation","useSelector","authSelectors","to","exact","className","link","activeClassName","activeLink","UserMenu","useDispatch","onLogout","useCallback","authOperations","src","defaultAvatar","alt","width","Avatar","Name","s","Button","type","onClick","AuthNav","PageHeading","text","title","AppBar","CSSTransition","classNames","stylesPageHeading","in","appear","timeout","unmountOnExit","header","PrivateRoute","redirectTo","routeProps","path","restricted","HomeView","lazy","RegisterView","LoginView","ContactsView","App","useEffect","isLoading","loading","isError","error","toast","fallback","actionsContact","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","configureStore","reducer","persistReducer","authReducer","contactsReducer","devTools","process","persistor","persistStore","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.64498998.chunk.js","sourcesContent":["// import { combineReducers } from 'redux';\nimport { createReducer, combineReducers } from '@reduxjs/toolkit';\nimport authActions from './auth-actions';\n// import actions from './auth-actions';\n\n// const {\n//   registerRequest,\n//   registerSuccess,\n//   registerError,\n//   loginRequest,\n//   loginSuccess,\n//   loginError,\n//   logoutRequest,\n//   logoutSuccess,\n//   logoutError,\n//   getCurrentUserRequest,\n//   getCurrentUserSuccess,\n//   getCurrentUserError\n// } = actions;\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\n  [authActions.logoutSuccess]: () => initialUserState,\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\n  [authActions.logoutSuccess]: () => null,\n});\n\n//const setError = (_, { payload }) => payload;\n\n// const error = createReducer(null, {\n//   [authActions.registerError]: setError,\n//   [authActions.loginError]: setError,\n//   [authActions.logoutError]: setError,\n//   [authActions.getCurrentUserError]: setError,\n// });\n\n\nconst isAuthenticated = createReducer(false, {\n  [authActions.registerSuccess]: () => true,\n  [authActions.loginSuccess]: () => true,\n  [authActions.getCurrentUserSuccess]: () => true,\n  [authActions.registerError]: () => false,\n  [authActions.loginError]: () => false,\n  [authActions.getCurrentUserError]: () => false,\n  [authActions.logoutSuccess]: () => false,\n});\n\n// const loading = createReducer(false, {\n//     [registerRequest]: () => true,\n//     [registerSuccess]: () => false,\n//     [registerError]: () => false,\n//     [loginRequest]: () => true,\n//     [loginSuccess]: () => false,\n//     [loginError]: () => false,\n//     [logoutRequest]: () => true,\n//     [logoutSuccess]: () => false,\n//     [logoutError]: () => false,\n//     [getCurrentUserRequest]: () => true,\n//     [getCurrentUserSuccess]: () => false,\n//     [getCurrentUserError]: () => false,\n// });\n\nexport default combineReducers({\n  user,\n  isAuthenticated,\n  token,\n  //error,\n  //loading\n});","import axios from 'axios';\nimport authActions from './auth-actions';\n\n  \naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\n// const CancelToken = axios.CancelToken;\n// const source = CancelToken.source();\n// ,{cancelToken: source.token}\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\n\nconst register = credentials => async dispatch => {\n  dispatch(authActions.registerRequest());\n\n  try {\n    const response = await axios.post('/users/signup', credentials);\n\n    token.set(response.data.token);\n    \n    dispatch(authActions.registerSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.registerError(error.message));\n    \n  }\n};\n\nconst logIn = credentials => async dispatch => {\n  dispatch(authActions.loginRequest());\n\n  try {\n    const {data} = await axios.post('/users/login', credentials);\n\n   \n    dispatch(authActions.loginSuccess(data));\n  } catch (error) {\n   \n    ;\n    dispatch(authActions.loginError(error.message));\n    \n  }\n  }\n\n\nconst logOut = () => async dispatch => {\n  dispatch(authActions.logoutRequest());\n\n  try {\n    await axios.post('/users/logout');\n\n    token.unset();\n    dispatch(authActions.logoutSuccess());\n  } catch (error) {\n    dispatch(authActions.logoutError(error.message));\n  }\n};\n\nconst getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  if (!persistedToken) {\n    return;\n  }\n\n  token.set(persistedToken);\n  dispatch(authActions.getCurrentUserRequest());\n\n  try {\n    const response = await axios.get('/users/current');\n\n    dispatch(authActions.getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.getCurrentUserError(error.message));\n  }\n};\n\nexport default { register, logOut, logIn, getCurrentUser };","const getIsAuthenticated = store =>store.auth.isAuthenticated;\n//const getLoadingAuth = state => state.contacts.loadingAuth;\nconst getUserName = store => store.auth.user.name;\nconst getToken = store => store.auth.token;\n\nexport default {\n  getIsAuthenticated,\n  getUserName,\n  //getLoadingAuth,\n  getToken\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__12o2K\",\"activeLink\":\"Navigation_activeLink__2rUFB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"AuthNav_link__2ejsg\",\"activeLink\":\"AuthNav_activeLink__3huQJ\"};","import { createAction } from '@reduxjs/toolkit';\n\nconst registerRequest = createAction('auth/registerRequest');\nconst registerSuccess = createAction('auth/registerSuccess');\nconst registerError = createAction('auth/registerError');\n\nconst loginRequest = createAction('auth/loginRequest');\nconst loginSuccess = createAction('auth/loginSuccess');\nconst loginError = createAction('auth/loginError');\n\nconst logoutRequest = createAction('auth/logoutRequest');\nconst logoutSuccess = createAction('auth/logoutSuccess');\nconst logoutError = createAction('auth/logoutError');\n\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\n\nexport default {\n    registerRequest,\n    registerSuccess,\n    registerError,\n    loginRequest,\n    loginSuccess,\n    loginError,\n    logoutRequest,\n    logoutSuccess,\n    logoutError,\n    getCurrentUserRequest,\n    getCurrentUserSuccess,\n    getCurrentUserError\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"PageHeading_appear__xfYdo\",\"appearActive\":\"PageHeading_appearActive__181zX\",\"position\":\"PageHeading_position__HA01O\",\"title\":\"PageHeading_title__1ffyz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"UserMenu_Container__2f4HK\",\"Avatar\":\"UserMenu_Avatar__38zOu\",\"Name\":\"UserMenu_Name__1deHt\"};","import axios from \"axios\";\nimport actions from './contacts-actions';\n// import { toast } from 'react-toastify';\n// import 'react-toastify/dist/ReactToastify.css';\n\nconst { fetchContactsRequest,\n    fetchContactsSuccess,\n    fetchContactsError,\n    addContactRequest,\n    addContactSuccess,\n    addContactError,\n    deleteContactRequest,\n    deleteContactSuccess,\n    deleteContactError\n} = actions;\n\n// const CancelToken = axios.CancelToken;\n\n// const source = CancelToken.source();\n\n// const token = {\n//   set(token) {\n//     axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n//   },\n//   unset() {\n//     axios.defaults.headers.common.Authorization = '';\n//   },\n// };\n\nconst fetchContacts = () => async dispatch => {\n    dispatch(fetchContactsRequest());\n\n    try {\n        const { data } = await axios.get('/contacts');\n        dispatch(fetchContactsSuccess(data));\n        \n    } catch (error) {\n        // const { statusText, status, data } = error.response;\n        // const errorMsg = `${status} ${statusText} :${data.message}`;\n        dispatch(fetchContactsError(error.message));\n        // return toast.error(errorMsg);\n    }\n};\n\nconst addContact = (name, number) => async dispatch => {\n    \n    const contact = {\n        name,\n        number       \n    };\n\n    dispatch(addContactRequest());\n\n    try {\n        const { data } = await axios.post('/contacts', contact);\n        dispatch(addContactSuccess(data));\n    } catch (error) {\n        // const { statusText, status, data } = error.response;\n        // const errorMsg = `${status} ${statusText} :${data.message}`;\n        dispatch(addContactError(error.message));\n        //  return toast.error(errorMsg);\n    }\n   \n};\n\nconst deleteContact = contactId => async dispatch => {\n\n    dispatch(deleteContactRequest());\n\n try {\n    await axios.delete(`/contacts/${contactId}`);\n    dispatch(deleteContactSuccess(contactId));\n } catch (error) {\n    //  const { statusText, status, data } = error.response;\n    // const errorMsg = `${status} ${statusText} :${data.message}`;\n    dispatch(deleteContactError(error.message));\n    // return toast.error(errorMsg)\n    }\n\n  \n};\n\nexport default {\n    fetchContacts,\n    addContact,\n    deleteContact\n};","import { createSelector } from \"@reduxjs/toolkit\";\n\n//const getLoadingContact = state => state.contacts.loadingContact;\nconst getFilter = store => store.contacts.filter;\nconst getAllContacts = store => store.contacts.items;\n\nconst getTotalContactCount = createSelector (\n    [getAllContacts],\n    // const contacts = getAllContacts(state);\n    (contacts)=>{\n    return contacts.length;}\n);\nconst getvisibleContacts = createSelector(\n    [getAllContacts, getFilter],\n\n    (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n        name.toLowerCase().includes(normalizedFilter),\n    );\n    },    \n);\n\n\nexport default {\n   //getLoadingContact,\n    getFilter,\n    getvisibleContacts,\n    getTotalContactCount,\n    getAllContacts,\n}\n","import { combineReducers } from \"redux\";\nimport {createReducer} from '@reduxjs/toolkit';\nimport actions from './contacts-actions';\n\nconst {\n    //fetchContactsRequest,\n    fetchContactsSuccess,\n    //fetchContactsError,\n    //addContactRequest,\n    addContactSuccess,\n    //addContactError,\n    //deleteContactRequest,\n    deleteContactSuccess,\n    //deleteContactError,\n    changeFilter } = actions;\n\nconst items = createReducer([], {\n    [fetchContactsSuccess]:(_,{payload})=>payload,\n    [addContactSuccess]:(state,{payload})=>[payload,...state],\n    [deleteContactSuccess]:(state,{payload})=>\n    state.filter(({id})=>id !== payload),\n});\n    \n\nconst filter=createReducer('', {\n    [changeFilter]:\n    (_,{payload})=>payload,\n});\n \n// const loading = createReducer(false, {\n//     [addContactRequest]: () => true,\n//     [addContactSuccess]: () => false,\n//     [addContactError]: () => false,\n//     [deleteContactRequest]: () => true,\n//     [deleteContactSuccess]: () => false,\n//     [deleteContactError]: () => false,\n//     [fetchContactsRequest]: () => true,\n//     [fetchContactsSuccess]: () => false,\n//     [fetchContactsError]: () => false,\n// });\n\n//const error = createReducer(null, {});\n\nexport default combineReducers ({\n    items,\n    filter,\n    //loading,\n   // error,\n  \n});\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3R1xi\"};","import styles from './Container.module.css';\n\nexport default function Container({ children }) {\n  return <div styles={styles.container}>{children}</div>;\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3RIox\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__1Yk8v\"};","\nimport { createAction } from '@reduxjs/toolkit';\n\nconst fetchContactsRequest = createAction('contacts/fetchContactsRequest');\nconst fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\nconst fetchContactsError = createAction('contacts/fetchContactsError');\n\nconst addContactRequest = createAction('contacts/addContactRequest');\nconst addContactSuccess = createAction('contacts/addContactSuccess');\nconst addContactError = createAction('contacts/addContactError');\n\nconst deleteContactRequest = createAction('contacts/deleteContactRequest');\nconst deleteContactSuccess = createAction('contacts/deleteContactSuccess');\nconst deleteContactError = createAction('contacts/deleteContactError');\n\nconst changeFilter = createAction('contacts/changeFilter');\n\nexport default {\n    fetchContactsRequest,\n    fetchContactsSuccess,\n    fetchContactsError,\n    addContactRequest,\n    addContactSuccess,\n    addContactError,\n    deleteContactRequest,\n    deleteContactSuccess,\n    deleteContactError,\n    changeFilter,\n};","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { authSelectors } from '../../redux/auth';\nimport styles from './Navigation.module.css';\n\nexport default function Navigation() {\n\n  const isAuthenticated = useSelector(authSelectors.getIsAuthenticated);\n\n  return (\n  <nav>\n    <div>\n      <div>\n    <NavLink\n      to=\"/\" exact\n       className={styles.link}\n       activeClassName={styles.activeLink}\n      >\n            Главная\n    </NavLink>\n          \n</div>\n    {isAuthenticated && (\n      <NavLink\n        to=\"/contacts\"\n        exact\n        className={styles.link}\n        activeClassName={styles.activeLink}>\n        Заметки\n      </NavLink>\n      )}\n      </div>\n  </nav>\n);}\n\n\n","export default __webpack_public_path__ + \"static/media/default-avatar.e44fc4e2.png\";","import React, { useCallback }from 'react';\nimport styles from './UserMenu.module.css';\nimport { useSelector,useDispatch } from 'react-redux';\nimport {authSelectors, authOperations} from '../../redux/auth'\nimport defaultAvatar from './default-avatar.png';\nimport s from '../../components/Button/Button.module.css'\n\nexport default function UserMenu() {\n    const dispatch = useDispatch();\n    const onLogout = useCallback(() => {\n        dispatch(authOperations.logOut());\n    }, [dispatch]\n    );\n\n    const name = useSelector(authSelectors.getUserName);\n\n\n    return (\n        <div className={styles.Container}>\n            <img src={defaultAvatar} alt=\"\" width=\"32\" styles={styles.Avatar} />\n            <span className={styles.Name}>Welcome, {name}</span>\n            <button className={s.Button}type=\"button\" onClick={onLogout}> Logout</button>\n        </div>\n    );\n};\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport styles from './AuthNav.module.css';\n\nconst AuthNav = () => {\n    return (\n        <div>\n            <NavLink\n                to='/register'\n                exact\n                className={styles.link}\n                activeClassName={styles.activeLink}\n            > Регистрация\n            </NavLink>\n            <NavLink\n                to='/login'\n                exact\n                className={styles.link}\n                activeClassName={styles.activeLink}\n            > Логин\n            </NavLink>\n        </div>\n    );\n};\n\nexport default AuthNav;","import styles from './PageHeading.module.css';\n\nexport default function PageHeading({ text }) {\n  return  <h1 className={styles.title}>{text}</h1>\n  ;\n}","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport styles from './AppBar.module.css';\nimport Navigation from '../Navigation';\nimport UserMenu from '../UserMenu';\nimport AuthNav from '../AuthNav'\nimport { authSelectors } from '../../redux/auth';\nimport PageHeading from '../../components/PageHeading';\nimport stylesPageHeading from \"../../components/PageHeading/PageHeading.module.css\";\nimport { CSSTransition } from \"react-transition-group\";\n\nexport default function AppBar() {\n  const isAuthenticated= useSelector(authSelectors.getIsAuthenticated);\n return (\n    <div>\n      <div>\n        <CSSTransition classNames={stylesPageHeading} in={true} appear timeout={500} unmountOnExit>\n          <PageHeading text=\"Phonebook\" />\n        </CSSTransition>\n      </div>\n      <div>\n        <header className={styles.header}>\n          <div>\n            <Navigation />\n          </div>\n          {isAuthenticated ? <UserMenu /> : <AuthNav />}\n        </header>\n      </div>\n    </div>\n  )\n};\n\n\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { authSelectors } from '../redux/auth';\n\n/**\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\n * - В противном случае рендерит Redirect на /login\n */\nexport default function PrivateRoute({\n  redirectTo,\n  children,\n  ...routeProps\n}) {\n  const token = useSelector(authSelectors.getToken);\n  //const isAuthenticated = useSelector(authSelectors.getIsAuthenticated);\n // const location = useLocation();\n  \n  return (\n   \n     <Route\n      {...routeProps}> {token ? (children): <Redirect to={redirectTo} />\n      }\n    </Route>\n  );\n};\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { authSelectors } from '../redux/auth';\n\n/**\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /todos\n * - В противном случае рендерит компонент\n */\nexport default function PrivateRoute({\n path,\n  redirectTo,\n  children,\n  ...routeProps\n}) { \n  const isAuthenticated = useSelector(authSelectors.getIsAuthenticated);\n  return (\n    <Route\n      {...routeProps}>\n      {isAuthenticated && routeProps.restricted ? <Redirect to={redirectTo} /> : (children)\n      }\n    </Route>\n  );\n};\n","import React, { Suspense, lazy, useEffect } from 'react';\nimport './App.css';\nimport { Switch} from 'react-router-dom';\nimport Container from '../Container';\nimport AppBar from '../../components/AppBar';\nimport { authOperations} from '../../redux/auth';\nimport { useDispatch,useSelector } from 'react-redux';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport PrivateRoute from '../PrivateRoute';\nimport PublicRoute from '../PublicRoute';\n\n\n\n//import {contactsSelectors} from '../../redux/contacts';\n\nconst HomeView = lazy(() =>\n  import('../../views/HomeView' /* webpackChunkName: \"home-view\" */),\n);\nconst RegisterView = lazy(() =>\n  import('../../views/RegisterView' /* webpackChunkName: \"home-view\" */),\n);\nconst LoginView = lazy(() =>\n  import('../../views/LoginView' /* webpackChunkName: \"home-view\" */),\n);\nconst ContactsView = lazy(() =>\n  import('../../views/ContactsView' /* webpackChunkName: \"home-view\" */),\n);\n\n\nexport default function App() {\n  const dispatch = useDispatch();\n  \n  useEffect(() => {\n\n    dispatch(authOperations.getCurrentUser());\n  \n  }, [dispatch]);\n//const isAuthenticated=useSelector(contactsSelectors.getLoadingContact);\n  const isLoading = useSelector(state => state.loading);\n \n  const isError = useSelector(state => state.error);\n  if (isError !== null) {\n    toast.error(isError)\n  }\n  // \"Ошибка логина или регистрации\"\n   \n    return (\n      \n     \n        <Container>\n        <AppBar />\n        <Suspense fallback={<p>Загружаем...</p>}>\n          {isLoading && <p>Загружаем...</p>}\n        <Switch>\n        <PublicRoute exact path=\"/\" >\n        <HomeView/></PublicRoute>\n        <PrivateRoute path=\"/contacts\"\n              redirectTo=\"/login\">\n              <ContactsView />\n            </PrivateRoute>\n        <PublicRoute path=\"/register\" restricted\n              redirectTo=\"/contacts\">\n              <RegisterView />\n            </PublicRoute>\n        <PublicRoute path=\"/login\" restricted\n              redirectTo=\"/contacts\">\n              <LoginView />\n            </PublicRoute>\n        </Switch>\n        </Suspense>\n        <ToastContainer/>\n        </Container>\n      \n      );\n  }\n\n\n\n\n","import {contactsReducer} from './contacts';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport authActions from '../redux/auth/auth-actions';\nimport logger from 'redux-logger';\nimport {createReducer} from '@reduxjs/toolkit';\nimport {\n        persistStore,\n        persistReducer,\n        FLUSH,\n        REHYDRATE,\n        PAUSE,\n        PERSIST,\n        PURGE,\n        REGISTER, \n} from 'redux-persist';\n import storage from 'redux-persist/lib/storage';\nimport { authReducer } from './auth';\nimport actionsContact from '../redux/contacts/contacts-actions';\nconst {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError\n} = authActions;\n\n\nconst { fetchContactsRequest,\n    fetchContactsSuccess,\n    fetchContactsError,\n    addContactRequest,\n    addContactSuccess,\n    addContactError,\n    deleteContactRequest,\n    deleteContactSuccess,\n    deleteContactError,\n    changeFilter } = actionsContact;\n\n\nconst middleware = [\n    ...getDefaultMiddleware({\n    serializableCheck:{\n    ignoredActions:[\n        FLUSH,\n        REHYDRATE,\n        PAUSE,\n        PERSIST,\n        PURGE,\n        REGISTER, \n        ],\n    }\n    }),\n   logger\n];\n\nconst authPersistConfig = {\n    key: 'auth',\n    storage,\n    whitelist:['token']\n}\n\nconst store = configureStore({\n \n    reducer: {\n        auth: persistReducer(authPersistConfig, authReducer),\n        contacts: contactsReducer,\n        error: createReducer(null, {\n            [authActions.registerError]: (_, { payload }) => payload,\n            [authActions.loginError]: (_, { payload }) => payload,\n            [authActions.logoutError]: (_, { payload }) => payload,\n            [authActions.getCurrentUserError]: (_, { payload }) => payload,\n        }),\n        loading: createReducer(false, {\n            [registerRequest]: () => true,\n            [registerSuccess]: () => false,\n            [registerError]: () => false,\n            [loginRequest]: () => true,\n            [loginSuccess]: () => false,\n            [loginError]: () => false,\n            [logoutRequest]: () => true,\n            [logoutSuccess]: () => false,\n            [logoutError]: () => false,\n            [getCurrentUserRequest]: () => true,\n            [getCurrentUserSuccess]: () => false,\n            [getCurrentUserError]: () => false,\n            [addContactRequest]: () => true,\n            [addContactSuccess]: () => false,\n            [addContactError]: () => false,\n            [deleteContactRequest]: () => true,\n            [deleteContactSuccess]: () => false,\n            [deleteContactError]: () => false,\n            [fetchContactsRequest]: () => true,\n            [fetchContactsSuccess]: () => false,\n            [fetchContactsError]: () => false,\n        }),\n        middleware,\n        devTools: process.env.NODE_ENV === 'development',\n    }\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n\n\n","import React from 'react';\nimport './index.css';\nimport { Provider } from 'react-redux'\nimport App from './components/App';\nimport { BrowserRouter } from 'react-router-dom';\nimport store from './redux/store';\nimport { render } from 'react-dom';\nimport { PersistGate} from 'redux-persist/integration/react';\n\nrender(\n  <React.StrictMode>\n   <Provider store={ store.store}>\n   <PersistGate loading={null} persistor={store.persistor}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n    </PersistGate>\n    </Provider>\n    </React.StrictMode>\n ,\n  document.getElementById('root')\n)\n\n\n\n  \n  "],"sourceRoot":""}
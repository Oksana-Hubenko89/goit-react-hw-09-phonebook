{"version":3,"sources":["redux/auth/auth-actions.js","redux/auth/auth-reducer.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","components/Navigation/Navigation.module.css","components/AuthNav/AuthNav.module.css","components/PageHeading/PageHeading.module.css","components/UserMenu/UserMenu.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","redux/contacts/contacts-reducer.js","components/Button/Button.module.css","components/Container/Container.js","components/Container/Container.module.css","components/AppBar/AppBar.module.css","components/Navigation/Navigation.js","components/UserMenu/default-avatar.png","components/UserMenu/UserMenu.js","components/AuthNav/AuthNav.js","components/PageHeading/PageHeading.js","components/AppBar/AppBar.js","components/PrivateRoute.js","components/PublicRoute.js","components/App/App.js","redux/store.js","index.js"],"names":["registerRequest","createAction","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","actions","initialUserState","name","email","user","createReducer","authActions","_","payload","token","setError","error","isAuthenticated","loadingAuth","combineReducers","axios","defaults","baseURL","headers","common","Authorization","register","credentials","dispatch","a","post","response","data","message","toast","logOut","logIn","getCurrentUser","getState","persistedToken","auth","get","getIsAuthenticated","state","getUserName","getLoadingAuth","contacts","module","exports","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","fetchContacts","statusText","status","errorMsg","addContact","number","contact","deleteContact","contactId","delete","getFilter","filter","getAllContacts","items","getTotalContactCount","createSelector","length","getLoadingContact","loadingContact","getvisibleContacts","normalizedFilter","toLowerCase","includes","id","Container","children","styles","container","connect","authSelectors","to","exact","className","link","activeClassName","activeLink","mapDispatchToProps","onLogout","authOperations","avatar","defaultAvatar","src","alt","width","Avatar","Name","s","Button","type","onClick","AuthNav","PageHeading","text","title","CSSTransition","classNames","stylesPageHeading","in","appear","timeout","unmountOnExit","header","Component","component","redirectTo","routeProps","render","props","restricted","HomeView","lazy","RegisterView","LoginView","ContactsView","App","this","onGetCurretnUser","fallback","path","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contactsReducer","devTools","process","persistor","persistStore","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.6575d1fa.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nconst registerRequest = createAction('auth/registerRequest');\nconst registerSuccess = createAction('auth/registerSuccess');\nconst registerError = createAction('auth/registerError');\n\nconst loginRequest = createAction('auth/loginRequest');\nconst loginSuccess = createAction('auth/loginSuccess');\nconst loginError = createAction('auth/loginError');\n\nconst logoutRequest = createAction('auth/logoutRequest');\nconst logoutSuccess = createAction('auth/logoutSuccess');\nconst logoutError = createAction('auth/logoutError');\n\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\n\nexport default {\n    registerRequest,\n    registerSuccess,\n    registerError,\n    loginRequest,\n    loginSuccess,\n    loginError,\n    logoutRequest,\n    logoutSuccess,\n    logoutError,\n    getCurrentUserRequest,\n    getCurrentUserSuccess,\n    getCurrentUserError\n};","// import { combineReducers } from 'redux';\nimport { createReducer, combineReducers } from '@reduxjs/toolkit';\nimport authActions from './auth-actions';\nimport actions from './auth-actions';\n\nconst {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError\n} = actions;\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\n  [authActions.logoutSuccess]: () => initialUserState,\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\n  [authActions.logoutSuccess]: () => null,\n});\n\nconst setError = (_, { payload }) => payload;\n\nconst error = createReducer(null, {\n  [authActions.registerError]: setError,\n  [authActions.loginError]: setError,\n  [authActions.logoutError]: setError,\n  [authActions.getCurrentUserError]: setError,\n});\n\nconst isAuthenticated = createReducer(false, {\n  [authActions.registerSuccess]: () => true,\n  [authActions.loginSuccess]: () => true,\n  [authActions.getCurrentUserSuccess]: () => true,\n  [authActions.registerError]: () => false,\n  [authActions.loginError]: () => false,\n  [authActions.getCurrentUserError]: () => false,\n  [authActions.logoutSuccess]: () => false,\n});\n\nconst loadingAuth = createReducer(false, {\n    [registerRequest]: () => true,\n    [registerSuccess]: () => false,\n    [registerError]: () => false,\n    [loginRequest]: () => true,\n    [loginSuccess]: () => false,\n    [loginError]: () => false,\n    [logoutRequest]: () => true,\n    [logoutSuccess]: () => false,\n    [logoutError]: () => false,\n    [getCurrentUserRequest]: () => true,\n    [getCurrentUserSuccess]: () => false,\n    [getCurrentUserError]: () => false,\n});\n\nexport default combineReducers({\n  user,\n  isAuthenticated,\n  token,\n  error,\n  loadingAuth\n});","import axios from 'axios';\nimport authActions from './auth-actions';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n  \naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\n\nconst register = credentials => async dispatch => {\n  dispatch(authActions.registerRequest());\n\n  try {\n    const response = await axios.post('/users/signup', credentials);\n\n    token.set(response.data.token);\n    dispatch(authActions.registerSuccess(response.data));\n  } catch (error) {\n    // const { statusText, status, data } = error.response;\n    // const errorMsg = `${status} ${statusText} :${data.message}`;\n     dispatch(authActions.registerError(error.message));\n    return toast.error('Ошибка! Введит больше 3-х символов Имя/Почта и больше 8 символов Пароль или Контакт существует!');\n  }\n};\n\nconst logIn = credentials => async dispatch => {\n  dispatch(authActions.loginRequest());\n\n  try {\n    const {data} = await axios.post('/users/login', credentials);\n\n    token.set(data.token);\n    dispatch(authActions.loginSuccess(data));\n  } catch (error) {\n   \n    // const { statusText, status, data } = error.response;\n    // const errorMsg = `${status} ${statusText} :${data.message}`;\n    dispatch(authActions.loginError(error.message));\n    return toast.error(\"Не верный логин та/или пароль!\");\n  }\n  }\n\n\nconst logOut = () => async dispatch => {\n  dispatch(authActions.logoutRequest());\n\n  try {\n    await axios.post('/users/logout');\n\n    token.unset();\n    dispatch(authActions.logoutSuccess());\n  } catch (error) {\n    dispatch(authActions.logoutError(error.message));\n  }\n};\n\nconst getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  if (!persistedToken) {\n    return;\n  }\n\n  token.set(persistedToken);\n  dispatch(authActions.getCurrentUserRequest());\n\n  try {\n    const response = await axios.get('/users/current');\n\n    dispatch(authActions.getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.getCurrentUserError(error.message));\n  }\n};\n\nexport default { register, logOut, logIn, getCurrentUser };","const getIsAuthenticated = state =>state.auth.isAuthenticated;\nconst getLoadingAuth = state => state.contacts.loadingAuth;\nconst getUserName = state => state.auth.user.name;\n\nexport default {\n  getIsAuthenticated,\n  getUserName,\n  getLoadingAuth\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__12o2K\",\"activeLink\":\"Navigation_activeLink__2rUFB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"AuthNav_link__2ejsg\",\"activeLink\":\"AuthNav_activeLink__3huQJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"PageHeading_appear__xfYdo\",\"appearActive\":\"PageHeading_appearActive__181zX\",\"position\":\"PageHeading_position__HA01O\",\"title\":\"PageHeading_title__1ffyz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"UserMenu_Container__2f4HK\",\"Avatar\":\"UserMenu_Avatar__38zOu\",\"Name\":\"UserMenu_Name__1deHt\"};","// import { v4 as uuidv4 } from 'uuid';\nimport { createAction } from '@reduxjs/toolkit';\n\nconst fetchContactsRequest = createAction('contacts/fetchContactsRequest');\nconst fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\nconst fetchContactsError = createAction('contacts/fetchContactsError');\n\nconst addContactRequest = createAction('contacts/addContactRequest');\nconst addContactSuccess = createAction('contacts/addContactSuccess');\nconst addContactError = createAction('contacts/addContactError');\n\nconst deleteContactRequest = createAction('contacts/deleteContactRequest');\nconst deleteContactSuccess = createAction('contacts/deleteContactSuccess');\nconst deleteContactError = createAction('contacts/deleteContactError');\n\nconst changeFilter = createAction('contacts/changeFilter');\n\nexport default {\n    fetchContactsRequest,\n    fetchContactsSuccess,\n    fetchContactsError,\n    addContactRequest,\n    addContactSuccess,\n    addContactError,\n    deleteContactRequest,\n    deleteContactSuccess,\n    deleteContactError,\n    changeFilter,\n};","import axios from \"axios\";\nimport actions from './contacts-actions';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst { fetchContactsRequest,\n    fetchContactsSuccess,\n    fetchContactsError,\n    addContactRequest,\n    addContactSuccess,\n    addContactError,\n    deleteContactRequest,\n    deleteContactSuccess,\n    deleteContactError\n} = actions;\n\n\nconst fetchContacts = () => async dispatch => {\n    dispatch(fetchContactsRequest());\n\n    try {\n        const { data } = await axios.get('/contacts');\n        dispatch(fetchContactsSuccess(data));\n        \n    } catch (error) {\n        const { statusText, status, data } = error.response;\n        const errorMsg = `${status} ${statusText} :${data.message}`;\n        dispatch(fetchContactsError(error.message));\n        return toast.error(errorMsg);\n    }\n};\n\nconst addContact = (name, number) => async dispatch => {\n    \n    const contact = {\n        name,\n        number       \n    };\n\n    dispatch(addContactRequest());\n\n    try {\n        const { data } = await axios.post('/contacts', contact);\n        dispatch(addContactSuccess(data));\n    } catch (error) {\n        // const { statusText, status, data } = error.response;\n        // const errorMsg = `${status} ${statusText} :${data.message}`;\n        dispatch(addContactError(error.message));\n        //  return toast.error(errorMsg);\n    }\n   \n};\n\nconst deleteContact = contactId => async dispatch => {\n\n    dispatch(deleteContactRequest());\n\n try {\n    await axios.delete(`/contacts/${contactId}`);\n    dispatch(deleteContactSuccess(contactId));\n } catch (error) {\n    //  const { statusText, status, data } = error.response;\n    // const errorMsg = `${status} ${statusText} :${data.message}`;\n    dispatch(deleteContactError(error.message));\n    // return toast.error(errorMsg)\n    }\n\n  \n};\n\nexport default {\n    fetchContacts,\n    addContact,\n    deleteContact\n};","import { createSelector } from \"@reduxjs/toolkit\";\n\nconst getLoadingContact = state => state.contacts.loadingContact;\nconst getFilter = state => state.contacts.filter;\nconst getAllContacts = state => state.contacts.items;\n\nconst getTotalContactCount = createSelector (\n    [getAllContacts],\n    // const contacts = getAllContacts(state);\n    (contacts)=>{\n    return contacts.length;}\n);\nconst getvisibleContacts = createSelector(\n    [getAllContacts, getFilter],\n\n    (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n        name.toLowerCase().includes(normalizedFilter),\n    );\n    },    \n);\n\n\nexport default {\n     getLoadingContact,\n    getFilter,\n    getvisibleContacts,\n    getTotalContactCount,\n    getAllContacts,\n}","import { combineReducers } from \"redux\";\nimport {createReducer} from '@reduxjs/toolkit';\nimport actions from './contacts-actions';\n\nconst { fetchContactsRequest,\n    fetchContactsSuccess,\n    fetchContactsError,\n    addContactRequest,\n    addContactSuccess,\n    addContactError,\n    deleteContactRequest,\n    deleteContactSuccess,\n    deleteContactError,\n    changeFilter } = actions;\n\nconst items = createReducer([], {\n    [fetchContactsSuccess]:(_,{payload})=>payload,\n    [addContactSuccess]:(state,{payload})=>[payload,...state],\n    [deleteContactSuccess]:(state,{payload})=>\n    state.filter(({id})=>id !== payload),\n});\n    \n\nconst filter=createReducer('', {\n    [changeFilter]:\n    (_,{payload})=>payload,\n});\n \nconst loadingContact = createReducer(false, {\n    [addContactRequest]: () => true,\n    [addContactSuccess]: () => false,\n    [addContactError]: () => false,\n    [deleteContactRequest]: () => true,\n    [deleteContactSuccess]: () => false,\n    [deleteContactError]: () => false,\n    [fetchContactsRequest]: () => true,\n    [fetchContactsSuccess]: () => false,\n    [fetchContactsError]: () => false,\n});\n\nconst error = createReducer(null, {});\n\nexport default combineReducers ({\n    items,\n    filter,\n    loadingContact,\n    error\n});\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3R1xi\"};","import styles from './Container.module.css';\n\nexport default function Container({ children }) {\n  return <div styles={styles.container}>{children}</div>;\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3RIox\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__1Yk8v\"};","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { authSelectors } from '../../redux/auth';\nimport styles from './Navigation.module.css';\n\nconst Navigation = ({ isAuthenticated }) => (\n  <nav>\n    <div>\n      <div>\n    <NavLink\n      to=\"/\" exact\n       className={styles.link}\n       activeClassName={styles.activeLink}\n      >\n      Главная\n    </NavLink>\n</div>\n    {isAuthenticated && (\n      <NavLink\n        to=\"/contacts\"\n        exact\n        className={styles.link}\n        activeClassName={styles.activeLink}>\n        Заметки\n      </NavLink>\n      )}\n      </div>\n  </nav>\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(Navigation);\n","export default __webpack_public_path__ + \"static/media/default-avatar.e44fc4e2.png\";","import React from 'react';\nimport styles from './UserMenu.module.css';\nimport { connect } from 'react-redux';\nimport {authSelectors, authOperations} from '../../redux/auth'\nimport defaultAvatar from './default-avatar.png';\nimport s from '../../components/Button/Button.module.css'\n\nconst UserMenu = ({ avatar, name, onLogout }) => {\n    return (\n        <div className={styles.Container}>\n            <img src={avatar} alt=\"\" width=\"32\" styles={styles.Avatar} />\n            <span className={styles.Name}>Welcome, {name}</span>\n            <button className={s.Button}type=\"button\" onClick={onLogout}> Logout</button>\n        </div>\n    );\n};\nconst mapStateProps = state => ({\n    name: authSelectors.getUserName(state),\n    avatar:defaultAvatar\n});\nconst mapDispatchToProps = {\n    onLogout:authOperations.logOut\n};\n\nexport default connect(mapStateProps,mapDispatchToProps)(UserMenu);","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport styles from './AuthNav.module.css';\n\nconst AuthNav = () => {\n    return (\n        <div>\n            <NavLink\n                to='/register'\n                exact\n                className={styles.link}\n                activeClassName={styles.activeLink}\n            > Регистрация\n            </NavLink>\n            <NavLink\n                to='/login'\n                exact\n                className={styles.link}\n                activeClassName={styles.activeLink}\n            > Логин\n            </NavLink>\n        </div>\n    );\n};\n\nexport default AuthNav;","import styles from './PageHeading.module.css';\n\nexport default function PageHeading({ text }) {\n  return  <h1 className={styles.title}>{text}</h1>\n  ;\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport styles from './AppBar.module.css';\nimport Navigation from '../Navigation';\nimport UserMenu from '../UserMenu';\nimport AuthNav from '../AuthNav'\nimport { authSelectors } from '../../redux/auth';\nimport PageHeading from '../../components/PageHeading';\nimport stylesPageHeading from \"../../components/PageHeading/PageHeading.module.css\";\nimport { CSSTransition } from \"react-transition-group\";\n\nconst AppBar = ({ isAuthenticated }) => (\n  <div>\n    <div>\n    < CSSTransition classNames={stylesPageHeading}  in={true} appear  timeout={500} unmountOnExit>\n          <PageHeading text=\"Phonebook\" />\n      </CSSTransition>\n    </div>\n    <div>\n  <header className={styles.header}>\n   <div>\n          <Navigation />\n  </div>\n    {isAuthenticated ? <UserMenu /> : <AuthNav />}\n  </header>\n  </div>\n    </div>\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps,null)(AppBar);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { authSelectors } from '../redux/auth';\n\n/**\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\n * - В противном случае рендерит Redirect на /login\n */\nconst PrivateRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={props =>\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { authSelectors } from '../redux/auth';\n\n/**\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /todos\n * - В противном случае рендерит компонент\n */\nconst PublicRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={props =>\n      isAuthenticated && routeProps.restricted ? (\n        <Redirect to={redirectTo} />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PublicRoute);","import React, { Component, Suspense, lazy } from 'react';\nimport './App.css';\nimport { Switch} from 'react-router-dom';\nimport Container from '../Container';\nimport AppBar from '../../components/AppBar';\nimport { authOperations } from '../../redux/auth';\nimport { connect } from 'react-redux';\nimport { ToastContainer} from 'react-toastify';\nimport PrivateRoute from '../PrivateRoute';\nimport PublicRoute from '../PublicRoute';\n\nconst HomeView = lazy(() =>\n  import('../../views/HomeView' /* webpackChunkName: \"home-view\" */),\n);\nconst RegisterView = lazy(() =>\n  import('../../views/RegisterView' /* webpackChunkName: \"home-view\" */),\n);\nconst LoginView = lazy(() =>\n  import('../../views/LoginView' /* webpackChunkName: \"home-view\" */),\n);\nconst ContactsView = lazy(() =>\n  import('../../views/ContactsView' /* webpackChunkName: \"home-view\" */),\n);\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.onGetCurretnUser();\n  }\n\n  render() {\n    \n    return (\n     \n        <Container>\n          <AppBar />\n           <Suspense fallback={<p>Загружаем...</p>}>\n          <Switch>\n            <PublicRoute exact path=\"/\" component={HomeView} />\n            \n          <PublicRoute path=\"/register\" restricted\n            redirectTo=\"/contacts\"\n            component={RegisterView} />\n          \n            <PublicRoute path=\"/login\" restricted\n            redirectTo=\"/contacts\"\n            component={LoginView} />\n          \n            <PrivateRoute path=\"/contacts\"\n            redirectTo=\"/login\"\n            component={ContactsView} />\n          \n        </Switch>\n\n        </Suspense>\n      <ToastContainer />\n      </Container>\n      );\n  }\n};\n\nconst mapDispatchToProps = {\n  onGetCurretnUser: authOperations.getCurrentUser,\n}\n\nexport default connect(null,mapDispatchToProps)(App);\n","import {contactsReducer} from './contacts';\nimport { configureStore, getDefaultMiddleware} from '@reduxjs/toolkit';\n//import logger from 'redux-logger';\nimport {createReducer} from '@reduxjs/toolkit';\nimport {\n        persistStore,\n        persistReducer,\n        FLUSH,\n        REHYDRATE,\n        PAUSE,\n        PERSIST,\n        PURGE,\n        REGISTER, \n} from 'redux-persist';\n import storage from 'redux-persist/lib/storage';\nimport { authReducer } from './auth';\n\nconst middleware = [\n    ...getDefaultMiddleware({\n    serializableCheck:{\n    ignoredActions:[\n        FLUSH,\n        REHYDRATE,\n        PAUSE,\n        PERSIST,\n        PURGE,\n        REGISTER, \n        ],\n    }\n    }),\n    //logger,\n];\n\nconst authPersistConfig = {\n    key: 'auth',\n    storage,\n    whitelist:['token']\n}\n\nconst store = configureStore({\n    reducer: {\n        auth: persistReducer(authPersistConfig, authReducer) ,\n        contacts: contactsReducer,\n        error:createReducer(null, {}),\n        },\n    middleware,\n    devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport default {store, persistor};","import React from 'react';\nimport './index.css';\nimport { Provider } from 'react-redux'\nimport App from './components/App';\nimport { BrowserRouter } from 'react-router-dom';\nimport store from './redux/store';\nimport { render } from 'react-dom';\nimport { PersistGate} from 'redux-persist/integration/react';\n\nrender(\n  <React.StrictMode>\n   <Provider store={ store.store}>\n   <PersistGate loading={null} persistor={store.persistor}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n    </PersistGate>\n    </Provider>\n    </React.StrictMode>\n ,\n  document.getElementById('root')\n)\n\n\n\n  \n  "],"sourceRoot":""}